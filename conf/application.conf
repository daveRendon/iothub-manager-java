// NOTE: the config is in HOCON format [1][2][3].
//       [1] https://en.wikipedia.org/wiki/HOCON
//       [2] https://www.playframework.com/documentation/2.6.x/ConfigFile
//       [3] https://github.com/typesafehub/config/blob/master/HOCON.md
//       By convention property names are lowercase.
//       By convention env. variable name are uppercase.

com.microsoft.azure.iotsolutions {
  iothub-manager {
    webservice-port : ${http.port}
    iothub.connstring : ${PCS_IOTHUB_CONNSTRING}
  }
}

http {
  port: 9002
}

// Play uses a secret key for a number of things, including:
// * Signing session cookies and CSRF tokens
// * Built in encryption utilities
// Azure IoT Solutions don't require this setting, however you should
//   set a value if you plan to use Play crypto libraries.
// * see https://www.playframework.com/documentation/2.6.x/ApplicationSecret
// * see https://www.playframework.com/documentation/2.6.x/CryptoMigration25
play.crypto.secret="change me e.g. use env var"
play.http.secret.key="changeme"
play.crypto.secret=${?APPLICATION_SECRET}
play.http.secret.key=${?APPLICATION_SECRET}

// Allows web applications to make requests from the browser across different domains
// See https://www.playframework.com/documentation/2.6.x/CorsFilter
play.filters.enabled += play.filters.cors.CORSFilter
play.filters.hosts {
  // Allow requests to example.com, its subdomains, and localhost:9000.
  // See https://www.playframework.com/documentation/2.6.x/AllowedHostsFilter
  allowed = ["."]
}

// Disable CSRF protection for AJAX requests containing the Csrf-Token header
// see https://www.playframework.com/documentation/2.6.x/JavaCsrf
// TODO devis: revisit after adding auth - https://github.com/Azure/iothub-manager-java/issues/35
play.filters.csrf.header.bypassHeaders {
  X-Requested-With = "*"
  Csrf-Token = "nocheck"
}

play.http.errorHandler = "com.microsoft.azure.iotsolutions.iothubmanager.webservice.filters.ErrorHandler"

akka {
  // Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel: INFO
}
